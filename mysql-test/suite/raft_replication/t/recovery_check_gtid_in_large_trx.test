--source include/have_wesql_test.inc

# 
# crash_during_large_trx_binlog_flush2
# 
connection default;
let $master_uuid= `SELECT @@GLOBAL.SERVER_UUID`;
create table t(id int);
--source include/wait_follower_catchup.inc

--connect (conn1,127.0.0.1,root,,test,$MYPORT_1)
--connection conn1
SET @@GLOBAL.DEBUG= 'd, disable_gtid_background_persister';
set global debug="+d,force_large_trx,force_large_trx_single_ev";
--connect (conn2,127.0.0.1,root,,test,$MYPORT_2)
--connection conn2
SET @@GLOBAL.DEBUG= 'd, disable_se_persists_gtid';
set global debug="+d,force_large_trx,force_large_trx_single_ev";
--connect (conn3,127.0.0.1,root,,test,$MYPORT_3)
--connection conn3
SET @@GLOBAL.DEBUG= 'd, disable_se_persists_gtid';
set global debug="+d,force_large_trx,force_large_trx_single_ev";

connection default;
SET @@GLOBAL.DEBUG= '+d, crash_during_large_trx_binlog_flush2';
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
insert into t values(1);

connection default;
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

SET @@GLOBAL.DEBUG= 'd, disable_gtid_background_persister';
set global debug="+d,force_large_trx,force_large_trx_single_ev";
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;
--connection conn3
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

#
# crash_during_large_trx_binlog_flush
#
connection default;
SET @@GLOBAL.DEBUG= '+d, crash_during_large_trx_binlog_flush';
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
insert into t values(2);

connection default;
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

SET @@GLOBAL.DEBUG= 'd, disable_gtid_background_persister';
set global debug="+d,force_large_trx,force_large_trx_single_ev";
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;
--connection conn3
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

#
# crash_during_large_trx_binlog_flush_slow
#
connection default;
SET @@GLOBAL.DEBUG= '+d, crash_during_large_trx_binlog_flush_slow';
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
insert into t values(3);

connection default;
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

SET @@GLOBAL.DEBUG= 'd, disable_gtid_background_persister';
set global debug="+d,force_large_trx,force_large_trx_single_ev";
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;
--connection conn3
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

#
# consensus_replication_crash_after_commit
#
connection default;
SET @@GLOBAL.DEBUG= '+d, consensus_replication_crash_after_commit';
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
insert into t values(4);

connection default;
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

SET @@GLOBAL.DEBUG= 'd, disable_gtid_background_persister';
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;
insert into t values(100);
--source include/wait_follower_catchup.inc

--connection conn2
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;
--connection conn3
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;
--disconnect conn1
--disconnect conn2
--disconnect conn3

#
# crash_before_update_pos
#
--connect (conn1,127.0.0.1,root,,test,$MYPORT_1)
--connect (conn2,127.0.0.1,root,,test,$MYPORT_2)
--connect (conn3,127.0.0.1,root,,test,$MYPORT_3)

--connection conn2
set global debug="+d,force_large_trx,force_large_trx_single_ev";
set global debug="+d,crash_before_update_pos";
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect

--connection conn1
insert into t values(5);
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--source include/wait_until_disconnected.inc
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
--enable_reconnect
--let $wait_follower= 1;
--source include/wait_until_connected_again.inc
--let $wait_follower= 0;
SET @@GLOBAL.DEBUG= 'd, disable_se_persists_gtid';

--connection conn1
set global debug="-d,force_large_trx,force_large_trx_single_ev";
insert into t values(6);
--source include/wait_follower_catchup.inc
set global debug="+d,force_large_trx,force_large_trx_single_ev";
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

#
# crash_in_a_worker
#
connection default;
set global debug="-d, force_large_trx,force_large_trx_single_ev";
# set up the tables and replicate it to the slave.
CREATE TABLE t1 (a int primary key) engine=innodb;
CREATE TABLE t2 (a int primary key) engine=innodb;
CREATE TABLE t3 (a int primary key) engine=innodb;
CREATE TABLE t4 (a int primary key) engine=innodb;
--source include/wait_follower_catchup.inc

--connection conn2
--source include/wait_apply_catchup.inc
STOP SLAVE SQL_THREAD for channel 'raft_replication_applier';
--sleep 1
SET @@GLOBAL.DEBUG= '+d, crash_in_a_worker';

--connection default
set global debug="+d,force_large_trx,force_large_trx_single_ev";
set debug = 'd, set_commit_parent_150';

# execute transactions

# trx1 should be applied and its worker released for receiving more work.
# trx2 to trx5 are prepared in a way that they will be scheduled on the slave
# but will not be applied. In order to have all four transactions scheduled,
# the coordinator will have to distribute work by all four workers. The test
# case expects the slave to crash after some workload be distributed to the
# worker #2.

# trx1
INSERT INTO t1 values (0);

# trx2 should not complete on the slave.
BEGIN;
INSERT INTO t2 values (1),(2),(3);
UPDATE t2 SET a= a+1 WHERE a=3;
COMMIT;

# trx3 should not complete on the slave.
BEGIN;
INSERT INTO t3 values (1),(2),(3);
UPDATE t3 SET a= a+1 WHERE a=3;
COMMIT;

# trx4 should not complete on the slave.
BEGIN;
INSERT INTO t4 values (1),(2),(3);
UPDATE t4 SET a= a+1 WHERE a=3;
COMMIT;

# trx5 should not complete on the slave.
BEGIN;
INSERT INTO t1 values (1),(2),(3);
UPDATE t1 SET a= a+1 WHERE a=3;
COMMIT;

# Make sure the workload is already on the relay log before starting the
# applier to avoid issues with slow systems.
--let $follower_connection_name= conn2
--source include/sync_leader_follower_log.inc

# This should prevent trx2 to trx5 from committing and will make all
# four MTS workers to be busy regardless of server speed.
--connection conn2
BEGIN;
select * from t1 where a=4;
select * from t2 where a=4;
select * from t3 where a=4;
select * from t4 where a=4;

# make sure mtr expects a crash & restarts
-- exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;
START SLAVE SQL_THREAD for channel 'raft_replication_applier';

-- source include/wait_until_disconnected.inc
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
--enable_reconnect
--let $wait_follower= 1;
--source include/wait_until_connected_again.inc
--let $wait_follower= 0;
--disable_reconnect
SET @@GLOBAL.DEBUG= 'd, disable_se_persists_gtid';
--source include/wait_apply_catchup.inc
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

connection default;
select * from t1;
select * from t2;
select * from t3;
select * from t4;
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

set debug='';
set global debug="-d,force_large_trx,force_large_trx_single_ev";
DROP TABLES t1,t2,t3,t4;
--source include/wait_follower_catchup.inc
set global debug="+d,force_large_trx,force_large_trx_single_ev";

#
# crash_after_update_pos_before_apply
#
--connection conn2
set global debug="+d,force_large_trx,force_large_trx_single_ev";
set global debug="+d,crash_after_update_pos_before_apply";
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect

--connection conn1
insert into t values(7);
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--source include/wait_until_disconnected.inc
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
--enable_reconnect
--let $wait_follower= 1;
--source include/wait_until_connected_again.inc
--let $wait_follower= 0;
SET @@GLOBAL.DEBUG= 'd, disable_se_persists_gtid';

--connection conn1
set global debug="-d,force_large_trx,force_large_trx_single_ev";
insert into t values(8);
--source include/wait_follower_catchup.inc
set global debug="+d,force_large_trx,force_large_trx_single_ev";
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

#
# crash_after_apply
#
--connection conn2
set global debug="+d,force_large_trx,force_large_trx_single_ev";
set global debug="+d,crash_after_apply";
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect

--connection conn1
insert into t values(9);
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--source include/wait_until_disconnected.inc
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
--enable_reconnect
--let $wait_follower= 1;
--source include/wait_until_connected_again.inc
--let $wait_follower= 0;
SET @@GLOBAL.DEBUG= 'd, disable_se_persists_gtid';

--connection conn1
set global debug="-d,force_large_trx,force_large_trx_single_ev";
insert into t values(10);
--source include/wait_follower_catchup.inc
set global debug="+d,force_large_trx,force_large_trx_single_ev";
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

--connection conn2
--replace_result $master_uuid MASTER_UUID
SELECT @@GLOBAL.GTID_EXECUTED, @@GLOBAL.GTID_OWNED;

connection default;
SET @@GLOBAL.DEBUG= '';
drop table t;
--enable_warnings
