# Binlog persist to object store
# Server restart with --serverless=true --binlog_archive_expire_auto_purge=false
# restart: --smartengine=1 --default-storage-engine=smartengine --serverless=true --binlog_archive_expire_auto_purge=false
CREATE DATABASE db1;
CREATE TABLE t1(c1 int) ENGINE=SMARTENGINE ;
INSERT INTO t1 values(1);
INSERT INTO t1 values(2);
FLUSH logs;
INSERT INTO t1 values(3);
FLUSH logs;
INSERT INTO t1 values(4);
FLUSH logs;
SELECT * FROM t1;
c1
1
2
3
4
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `c1` int DEFAULT NULL
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
show binary logs;
Log_name	File_size	Encrypted
binlog.000001	#	#
binlog.000002	#	#
binlog.000003	#	#
binlog.000004	#	#
SELECT Log_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
Log_name
binlog.000001
binlog.000002
binlog.000003
SELECT SUBSTRING_INDEX(REPLACE(Log_name, '/', ' '),  ' ', -1) as log_slice from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILES order by log_slice;
log_slice
binlog.000001.0000001856
binlog.000002.0000000627
binlog.000003.0000000627
# Puge persistent binlog binlog.000002
SELECT binlog_persistent_purge('binlog.000002');
binlog_persistent_purge('binlog.000002')
Purge binlog persistent files successfully
SELECT Log_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
Log_name
binlog.000002
binlog.000003
SELECT SUBSTRING_INDEX(REPLACE(Log_name, '/', ' '),  ' ', -1) as log_slice from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILES order by log_slice;
log_slice
binlog.000002.0000000627
binlog.000003.0000000627
DROP DATABASE db1;
