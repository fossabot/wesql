Test adding unique index inplace in a table with PRIMARY KEY
###################################################################
# ref https://yuque.antfin-inc.com/db_core_team/internal_docs/wywa0h#f68c70b7
# t0: create table time
# t1: build-sk start time
# t2: build-base sk finish, and uk check start
# t3: uk-check finish
# d1: data in [t0-t1]
# d2: data in [t1-t2]
# d3: data in [t2-t3]
# d4: data in [t3-]
###################################################################
# Using two connections for following tests, now establish connection con1 (user=root)
# Test suite/smartengine/t/online_ddl_add_uk_with_pk_blob.inc with latin1 and latin1_bin
###################################################################
# case 1: key1 in d1 duplicates with key2 in d1
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 1.2: key1 in d1 duplicates with key2 in d1, but with a deletion
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
DELETE FROM t1 WHERE b='111111';
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
Add unique index successfully
SELECT * FROM t1;
a	b	c
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4)),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 2.1: key1 in d1 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 2.2: key1 in d1 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111122' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 2.3: key1 in d1 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 2.4: key1 in d1 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'dddddd');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 2.5: key1 in d1 duplicates with multiple delete-insert on key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(3, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 3.1: key1 in d1 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 3.2: key1 in d1 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 3.3: key1 in d1 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 3.4: key1 in d1 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 4.1: key1 in d1 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 4.2: key1 in d1 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 4.3: key1 in d1 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 4.4: key1 in d1 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 5.1: key1 in d2 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 5.2: key1 in d2 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 5.3: key1 in d2 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 5.4: key1 in d2 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 6.1: key1 in d2 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 6.2: key1 in d2 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 6.3: key1 in d2 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 6.4: key1 in d2 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 7.1: key1 in d2 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 7.2: key1 in d2 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 7.3: key1 in d2 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 7.4: key1 in d2 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 8.1: key1 in d3 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 8.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 8.3: key1 in d3 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 8.4: key1 in d3 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 9.1: key1 in d4 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 9.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 9.3: key1 in d4 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
###################################################################
# case 9.4: key1 in d4 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET latin1 COLLATE latin1_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE latin1_bin,
  `c` text COLLATE latin1_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=latin1 COLLATE=latin1_bin
DROP TABLE t1;
# Test suite/smartengine/t/online_ddl_add_uk_with_pk_blob.inc with gbk and gbk_bin
###################################################################
# case 1: key1 in d1 duplicates with key2 in d1
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 1.2: key1 in d1 duplicates with key2 in d1, but with a deletion
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
DELETE FROM t1 WHERE b='111111';
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
Add unique index successfully
SELECT * FROM t1;
a	b	c
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4)),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 2.1: key1 in d1 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 2.2: key1 in d1 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111122' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 2.3: key1 in d1 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 2.4: key1 in d1 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'dddddd');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 2.5: key1 in d1 duplicates with multiple delete-insert on key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(3, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 3.1: key1 in d1 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 3.2: key1 in d1 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 3.3: key1 in d1 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 3.4: key1 in d1 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 4.1: key1 in d1 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 4.2: key1 in d1 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 4.3: key1 in d1 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 4.4: key1 in d1 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 5.1: key1 in d2 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 5.2: key1 in d2 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 5.3: key1 in d2 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 5.4: key1 in d2 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 6.1: key1 in d2 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 6.2: key1 in d2 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 6.3: key1 in d2 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 6.4: key1 in d2 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 7.1: key1 in d2 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 7.2: key1 in d2 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 7.3: key1 in d2 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 7.4: key1 in d2 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 8.1: key1 in d3 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 8.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 8.3: key1 in d3 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 8.4: key1 in d3 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 9.1: key1 in d4 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 9.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 9.3: key1 in d4 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
###################################################################
# case 9.4: key1 in d4 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE gbk_bin,
  `c` text COLLATE gbk_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk COLLATE=gbk_bin
DROP TABLE t1;
# Test suite/smartengine/t/online_ddl_add_uk_with_pk_blob.inc with gbk and gbk_chinese_ci
###################################################################
# case 1: key1 in d1 duplicates with key2 in d1
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 1.2: key1 in d1 duplicates with key2 in d1, but with a deletion
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
DELETE FROM t1 WHERE b='111111';
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
Add unique index successfully
SELECT * FROM t1;
a	b	c
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4)),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 2.1: key1 in d1 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 2.2: key1 in d1 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111122' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 2.3: key1 in d1 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 2.4: key1 in d1 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'dddddd');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 2.5: key1 in d1 duplicates with multiple delete-insert on key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(3, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 3.1: key1 in d1 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 3.2: key1 in d1 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 3.3: key1 in d1 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 3.4: key1 in d1 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 4.1: key1 in d1 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 4.2: key1 in d1 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 4.3: key1 in d1 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 4.4: key1 in d1 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 5.1: key1 in d2 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 5.2: key1 in d2 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 5.3: key1 in d2 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 5.4: key1 in d2 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 6.1: key1 in d2 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 6.2: key1 in d2 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 6.3: key1 in d2 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 6.4: key1 in d2 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 7.1: key1 in d2 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 7.2: key1 in d2 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 7.3: key1 in d2 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 7.4: key1 in d2 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 8.1: key1 in d3 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 8.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 8.3: key1 in d3 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 8.4: key1 in d3 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 9.1: key1 in d4 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 9.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 9.3: key1 in d4 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
###################################################################
# case 9.4: key1 in d4 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET gbk COLLATE gbk_chinese_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=gbk
DROP TABLE t1;
# Test suite/smartengine/t/online_ddl_add_uk_with_pk_blob.inc with utf8 and utf8_bin
###################################################################
# case 1: key1 in d1 duplicates with key2 in d1
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 1.2: key1 in d1 duplicates with key2 in d1, but with a deletion
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
DELETE FROM t1 WHERE b='111111';
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
Add unique index successfully
SELECT * FROM t1;
a	b	c
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4)),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 2.1: key1 in d1 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 2.2: key1 in d1 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111122' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 2.3: key1 in d1 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 2.4: key1 in d1 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'dddddd');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 2.5: key1 in d1 duplicates with multiple delete-insert on key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(3, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 3.1: key1 in d1 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 3.2: key1 in d1 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 3.3: key1 in d1 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 3.4: key1 in d1 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 4.1: key1 in d1 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 4.2: key1 in d1 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 4.3: key1 in d1 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 4.4: key1 in d1 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 5.1: key1 in d2 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 5.2: key1 in d2 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 5.3: key1 in d2 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 5.4: key1 in d2 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 6.1: key1 in d2 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 6.2: key1 in d2 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 6.3: key1 in d2 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 6.4: key1 in d2 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 7.1: key1 in d2 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 7.2: key1 in d2 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 7.3: key1 in d2 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 7.4: key1 in d2 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 8.1: key1 in d3 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 8.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 8.3: key1 in d3 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 8.4: key1 in d3 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 9.1: key1 in d4 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 9.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 9.3: key1 in d4 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
###################################################################
# case 9.4: key1 in d4 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_bin;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_bin' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb3_bin,
  `c` text COLLATE utf8mb3_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin
DROP TABLE t1;
# Test suite/smartengine/t/online_ddl_add_uk_with_pk_blob.inc with utf8 and utf8_general_ci
###################################################################
# case 1: key1 in d1 duplicates with key2 in d1
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 1.2: key1 in d1 duplicates with key2 in d1, but with a deletion
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
DELETE FROM t1 WHERE b='111111';
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
Add unique index successfully
SELECT * FROM t1;
a	b	c
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4)),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 2.1: key1 in d1 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 2.2: key1 in d1 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111122' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 2.3: key1 in d1 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 2.4: key1 in d1 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'dddddd');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 2.5: key1 in d1 duplicates with multiple delete-insert on key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(3, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 3.1: key1 in d1 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 3.2: key1 in d1 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 3.3: key1 in d1 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 3.4: key1 in d1 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 4.1: key1 in d1 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 4.2: key1 in d1 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 4.3: key1 in d1 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 4.4: key1 in d1 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 5.1: key1 in d2 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 5.2: key1 in d2 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 5.3: key1 in d2 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 5.4: key1 in d2 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 6.1: key1 in d2 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 6.2: key1 in d2 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 6.3: key1 in d2 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 6.4: key1 in d2 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 7.1: key1 in d2 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 7.2: key1 in d2 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 7.3: key1 in d2 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 7.4: key1 in d2 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 8.1: key1 in d3 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 8.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 8.3: key1 in d3 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 8.4: key1 in d3 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 9.1: key1 in d4 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 9.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 9.3: key1 in d4 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
###################################################################
# case 9.4: key1 in d4 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8 COLLATE utf8_general_ci;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warning	3778	'utf8mb3_general_ci' is a collation of the deprecated character set UTF8MB3. Please consider using UTF8MB4 with an appropriate collation instead.
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb3
DROP TABLE t1;
# Test suite/smartengine/t/online_ddl_add_uk_with_pk_blob.inc with utf8mb4 and utf8mb4_bin
###################################################################
# case 1: key1 in d1 duplicates with key2 in d1
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 1.2: key1 in d1 duplicates with key2 in d1, but with a deletion
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
DELETE FROM t1 WHERE b='111111';
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
Add unique index successfully
SELECT * FROM t1;
a	b	c
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4)),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 2.1: key1 in d1 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 2.2: key1 in d1 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111122' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 2.3: key1 in d1 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 2.4: key1 in d1 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'dddddd');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 2.5: key1 in d1 duplicates with multiple delete-insert on key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(3, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 3.1: key1 in d1 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 3.2: key1 in d1 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 3.3: key1 in d1 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 3.4: key1 in d1 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 4.1: key1 in d1 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 4.2: key1 in d1 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 4.3: key1 in d1 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 4.4: key1 in d1 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 5.1: key1 in d2 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 5.2: key1 in d2 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 5.3: key1 in d2 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 5.4: key1 in d2 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 6.1: key1 in d2 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 6.2: key1 in d2 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 6.3: key1 in d2 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 6.4: key1 in d2 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 7.1: key1 in d2 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 7.2: key1 in d2 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 7.3: key1 in d2 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 7.4: key1 in d2 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 8.1: key1 in d3 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 8.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 8.3: key1 in d3 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 8.4: key1 in d3 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 9.1: key1 in d4 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 9.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 9.3: key1 in d4 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
###################################################################
# case 9.4: key1 in d4 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_bin;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_bin,
  `c` text COLLATE utf8mb4_bin,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin
DROP TABLE t1;
# Test suite/smartengine/t/online_ddl_add_uk_with_pk_blob.inc with utf8mb4 and utf8mb4_general_ci
###################################################################
# case 1: key1 in d1 duplicates with key2 in d1
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 1.2: key1 in d1 duplicates with key2 in d1, but with a deletion
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
DELETE FROM t1 WHERE b='111111';
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
Add unique index successfully
SELECT * FROM t1;
a	b	c
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4)),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 2.1: key1 in d1 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 2.2: key1 in d1 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111122' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 2.3: key1 in d1 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 2.4: key1 in d1 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'dddddd');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 2.5: key1 in d1 duplicates with multiple delete-insert on key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(3, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 3.1: key1 in d1 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 3.2: key1 in d1 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 3.3: key1 in d1 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 3.4: key1 in d1 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 4.1: key1 in d1 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 4.2: key1 in d1 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 4.3: key1 in d1 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 4.4: key1 in d1 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 5.1: key1 in d2 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 5.2: key1 in d2 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 5.3: key1 in d2 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 5.4: key1 in d2 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 6.1: key1 in d2 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 6.2: key1 in d2 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 6.3: key1 in d2 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 6.4: key1 in d2 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 7.1: key1 in d2 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 7.2: key1 in d2 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 7.3: key1 in d2 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 7.4: key1 in d2 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 8.1: key1 in d3 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 8.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 8.3: key1 in d3 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 8.4: key1 in d3 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 9.1: key1 in d4 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 9.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 9.3: key1 in d4 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
###################################################################
# case 9.4: key1 in d4 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_general_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text COLLATE utf8mb4_general_ci,
  `c` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
DROP TABLE t1;
# Test suite/smartengine/t/online_ddl_add_uk_with_pk_blob.inc with utf8mb4 and utf8mb4_0900_ai_ci
###################################################################
# case 1: key1 in d1 duplicates with key2 in d1
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 1.2: key1 in d1 duplicates with key2 in d1, but with a deletion
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
DELETE FROM t1 WHERE b='111111';
INSERT INTO t1 VALUES(2, '111111', 'cccccc');
ALTER TABLE t1 ADD INDEX t1_c(c(5)), ALGORITHM=INPLACE, LOCK=DEFAULT;
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
Add unique index successfully
SELECT * FROM t1;
a	b	c
2	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4)),
  KEY `t1_c` (`c`(5))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 2.1: key1 in d1 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 2.2: key1 in d1 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111122' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111122	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 2.3: key1 in d1 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 2.4: key1 in d1 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'dddddd');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 2.5: key1 in d1 duplicates with multiple delete-insert on key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(3, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 3.1: key1 in d1 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 3.2: key1 in d1 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 3.3: key1 in d1 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 3.4: key1 in d1 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 4.1: key1 in d1 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 4.2: key1 in d1 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
UPDATE t1 SET b='111111' WHERE a=2;
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	111111	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 4.3: key1 in d1 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
DELETE FROM t1 where b='111111';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
5	111111	cccccc
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
5	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 4.4: key1 in d1 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '111111', 'cccccc');
DELETE FROM t1 where b='111111';
SELECT * FROM t1;
a	b	c
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '1111' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 5.1: key1 in d2 duplicates with inserted key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
4	222222	bbbbbb
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 5.2: key1 in d2 duplicates with updated key2 in d2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 5.3: key1 in d2 duplicates with inserted key2 in d2 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
5	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 5.4: key1 in d2 duplicates with inserted key2 in d2 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin SIGNAL start_dml WAIT_FOR dml_done';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR start_dml';
INSERT INTO t1 VALUES(4, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(5, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_done';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 6.1: key1 in d2 duplicates with inserted key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 6.2: key1 in d2 duplicates with updated key2 in d3
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 6.3: key1 in d2 duplicates with inserted key2 in d3 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 6.4: key1 in d2 duplicates with inserted key2 in d3 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry 'NULL' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 7.1: key1 in d2 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 7.2: key1 in d2 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 7.3: key1 in d2 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 7.4: key1 in d2 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_scan_base_begin        SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 8.1: key1 in d3 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 8.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 8.3: key1 in d3 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 8.4: key1 in d3 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_begin SIGNAL dml1 WAIT_FOR dml1_end';
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml2 WAIT_FOR dml2_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml1';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
SET DEBUG_SYNC= 'now SIGNAL dml1_end';
SET DEBUG_SYNC= 'now WAIT_FOR dml2';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml2_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 9.1: key1 in d4 duplicates with inserted key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
2	222222	bbbbbb
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 9.2: key1 in d3 duplicates with updated key2 in d4
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
UPDATE t1 SET b='222222' WHERE a=1;
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	222222	cccccc
2	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 9.3: key1 in d4 duplicates with inserted key2 in d4 but with a deletion before inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
ADD UNIQUE INDEX successfully
SELECT * FROM t1;
a	b	c
1	111111	cccccc
3	222222	bbbbbb
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`),
  UNIQUE KEY `t1_ub` (`b`(4))
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
###################################################################
# case 9.4: key1 in d4 duplicates with inserted key2 in d4 but with a deletion after inserting key2
###################################################################
CREATE TABLE t1 (a INT PRIMARY KEY, b TEXT, c TEXT)CHARSET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
INSERT INTO t1 VALUES(1, '111111', 'cccccc');
SET DEBUG_SYNC= 'se.inplace_create_sk_check_constraint_done  SIGNAL dml WAIT_FOR dml_end';
ALTER TABLE t1 ADD UNIQUE INDEX t1_ub(b(4)), ALGORITHM=INPLACE, LOCK=DEFAULT;
# Switch to connection con1
SET DEBUG_SYNC= 'now WAIT_FOR dml';
INSERT INTO t1 VALUES(2, '222222', 'bbbbbb');
INSERT INTO t1 VALUES(3, '222222', 'bbbbbb');
DELETE FROM t1 where b='222222';
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SET DEBUG_SYNC= 'now SIGNAL dml_end';
# Switch to connection default
ERROR 23000: Duplicate entry '2222' for key 't1.t1_ub'
SELECT * FROM t1;
a	b	c
1	111111	cccccc
failed to ADD UNIQUE INDEX
SELECT * FROM t1;
a	b	c
1	111111	cccccc
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  `b` text,
  `c` text,
  PRIMARY KEY (`a`)
) ENGINE=SMARTENGINE DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
DROP TABLE t1;
