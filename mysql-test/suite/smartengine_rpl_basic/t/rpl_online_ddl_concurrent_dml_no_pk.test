--source include/master-slave.inc
--source suite/smartengine/include/have_smartengine.inc
--source include/have_debug.inc
###################################################################
# test the online DDL&DML with no primary key table
###################################################################
--disable_warnings
drop table if exists t1;
--enable_warnings
CREATE TABLE t1 (id INT, c1 INT, c2 int, c3 int);
insert into t1 values(1,1,1,1),(5,5,5,5),(9,9,9,9);

# set the wait point to insert key2
SET DEBUG_SYNC= 'se.inplace_copy_ddl_scan_base_begin SIGNAL start_dml_insert WAIT_FOR start_dml_insert_finish';
send alter table t1 drop column c1, add column c4 int default 100, ALGORITHM=INPLACE, LOCK=DEFAULT;

    --echo # Establish connection con1 (user=root)
    connect (con1,localhost,root,,);
    --echo # Switch to connection con1
    connection con1;

    # insert key2
    # wait the create sk ddl enter the inplace_create_sk_scan_base_begin point
    SET DEBUG_SYNC= 'now WAIT_FOR start_dml_insert';
    insert into t1 values(6,6,6,6),(7,7,7,7);
    select * from t1;
    update t1 set c2=100 where id > 6;
    select * from t1;
    update t1 set c1=99 where id > 6;
    select * from t1;
    delete from t1 where id=1;
    select * from t1;

    # signal create sk ddl the key2 has been inserted
    SET DEBUG_SYNC= 'now SIGNAL start_dml_insert_finish';

--echo # Switch to connection master
connection master;
reap;
--let $table_1= t1
--source ../include/online_ddl_checksum.inc
select * from t1;
drop table t1;

--echo #end-1#

#####################################################################
###test varchar mixed int with multi-keys, and no primary key table
#####################################################################
--disable_warnings
drop table if exists t1;
--enable_warnings
create table t1(id int, c1 int, c2 varchar(100), c3 int);
insert into t1 values(1,11,'abc',111);
insert into t1 values(2,12,'abc',222);
insert into t1 values(3,13,'abc',333);

alter table t1 add index idx_c1(c1),algorithm=inplace,lock=default;
alter table t1 add index idx_c2(c2),algorithm=inplace,lock=default;
alter table t1 add index idx_c3(c3),algorithm=inplace,lock=default;
alter table t1 add index idx_c1_c2(c1,c2),algorithm=inplace,lock=default;

# set the wait point to insert key2
connection master;
SET DEBUG_SYNC= 'se.inplace_copy_ddl_scan_base_begin SIGNAL start_dml_insert WAIT_FOR start_dml_insert_finish';
send alter table t1 drop column c1, add column c4 int default 100, ALGORITHM=INPLACE, LOCK=DEFAULT;

    --echo # Switch to connection con1
    connection con1;	
    # insert key2
    # wait the create sk ddl enter the inplace_create_sk_scan_base_begin point
    SET DEBUG_SYNC= 'now WAIT_FOR start_dml_insert';
    insert into t1 values(6,6,'6666',6),(7,7,'777777',7);
    select * from t1;
    update t1 set c2='aaaa' where id > 6;
    select * from t1;
    update t1 set c1=99 where id > 6;
    select * from t1;
    delete from t1 where id=1;
    select * from t1;

    # signal create sk ddl the key2 has been inserted
    SET DEBUG_SYNC= 'now SIGNAL start_dml_insert_finish';

--echo # Switch to connection master
connection master;
reap;
--let $table_1= t1
--source ../include/online_ddl_checksum.inc
select * from t1;
drop table t1;

--echo #end-2#

##########################################################################################
###test new add columns, and new column is part of new indexes, and no primary key table
###########################################################################################
--disable_warnings
drop table if exists t1;
--enable_warnings
create table t1(id int, c1 int, c2 varchar(100), c3 int);
insert into t1 values(1,11,'abc',111);
insert into t1 values(2,12,'abc',222);
insert into t1 values(3,13,'abc',333);

# set the wait point to insert key2
connection master;
SET DEBUG_SYNC= 'se.inplace_copy_ddl_scan_base_begin SIGNAL start_dml_insert WAIT_FOR start_dml_insert_finish';
send alter table t1 add column c4 int default 100, add index idx_c4(c4), ALGORITHM=INPLACE, LOCK=DEFAULT;

    --echo # Switch to connection con1
    connection con1;	
    # insert key2
    # wait the create sk ddl enter the inplace_create_sk_scan_base_begin point
    SET DEBUG_SYNC= 'now WAIT_FOR start_dml_insert';
    insert into t1 values(6,6,'6666',6),(7,7,'777777',7);
    select * from t1;
    update t1 set c2='aaaa' where id > 6;
    select * from t1;
    update t1 set c1=99 where id > 6;
    select * from t1;
    delete from t1 where id=1;
    select * from t1;

    # signal create sk ddl the key2 has been inserted
    SET DEBUG_SYNC= 'now SIGNAL start_dml_insert_finish';

--echo # Switch to connection master
connection master;
reap;

check table t1;
select * from t1;
--let $table_1= t1
--source ../include/online_ddl_checksum.inc
drop table t1;

--echo #end-3#

--source include/rpl_sync.inc
--source include/rpl_end.inc


--connection master
--source suite/smartengine/include/check_smartengine_log_error.inc
