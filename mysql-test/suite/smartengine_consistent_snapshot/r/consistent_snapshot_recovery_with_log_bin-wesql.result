# Consistent snapshot, change log-bin and consistent snapshot recovey.
# Wait for first snapshots to be generated after startup 
FLUSH logs;
show binary logs;
Log_name	File_size	Encrypted
master-bin.000001	#	#
master-bin.000002	#	#
# Wait persistent binlog finish. 
SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
Log_slice_name
binlog.000001.00000000000000000002.0000000607
# Crash
set debug = 'd, crash_commit_before_log';
create table t1(id int);
ERROR HY000: Lost connection to MySQL server during query
# Force rmdir datadir for recovery test
# Create an empty data directory...
# Recovery start using consistent snapshot with no binlog
# restart: 
# Wait for first snapshots to be generated after startup recovery.
include/assert.inc [the first consistent snapshot binlog is empty.]
show binary logs;
Log_name	File_size	Encrypted
master-bin.000001	#	#
master-bin.000002	#	#
# Wait persistent binlog finish. 
SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
Log_slice_name
binlog.000001.00000000000000000002.0000000607
binlog.000001.00000000000000000003.0000000655
binlog.000002.00000000000000000003.0000000333
CREATE DATABASE db1;
CREATE TABLE t1(c1 int, c2 char(200)) ENGINE=SMARTENGINE ;
INSERT INTO t1 values(1,'abcd');
INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;
INSERT INTO t1 values(5,'abcd');
FLUSH logs;
FLUSH logs;
FLUSH logs;
INSERT INTO t1 values(6,'abcd');
INSERT INTO t1 values(7,'abcd');
INSERT INTO t1 values(8,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;
SELECT count(*) FROM t1;
count(*)
544
show binary logs;
Log_name	File_size	Encrypted
master-bin.000001	#	#
master-bin.000002	#	#
master-bin.000003	#	#
master-bin.000004	#	#
master-bin.000005	#	#
master-bin.000006	#	#
master-bin.000007	#	#
# Wait persistent binlog finish. 
SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
Log_slice_name
binlog.000001.00000000000000000002.0000000607
binlog.000001.00000000000000000003.0000000655
binlog.000002.00000000000000000003.0000000333
binlog.000002.00000000000000000003.0000004270
binlog.000003.00000000000000000003.0000000643
binlog.000004.00000000000000000003.0000000299
binlog.000005.00000000000000000003.0000000299
binlog.000006.00000000000000000003.0000007566
# Shutdown server
# Force rmdir datadir for recovery test
# Create an empty data directory...
# Recovery start using consistent snapshot, and change --log-bin
# restart
# Wait for snapshots to be generated after startup recovery
SELECT count(*) FROM t1;
count(*)
544
show binary logs;
Log_name	File_size	Encrypted
custom-binlog.000006	#	#
custom-binlog.000007	#	#
custom-binlog.000008	#	#
# Wait persistent binlog finish. 
SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
Log_slice_name
binlog.000001.00000000000000000002.0000000607
binlog.000001.00000000000000000003.0000000655
binlog.000002.00000000000000000003.0000000333
binlog.000002.00000000000000000003.0000004270
binlog.000003.00000000000000000003.0000000643
binlog.000004.00000000000000000003.0000000299
binlog.000005.00000000000000000003.0000000299
binlog.000006.00000000000000000003.0000007566
binlog.000007.00000000000000000003.0000000251
binlog.000007.00000000000000000004.0000000299
binlog.000008.00000000000000000004.0000000251
# Shutdown server
# Force rmdir datadir for recovery test
# Create an empty data directory...
# Recovery start using consistent snapshot
# restart
# Wait for snapshots to be generated after startup recovery 
SELECT count(*) FROM t1;
count(*)
544
show binary logs;
Log_name	File_size	Encrypted
master-bin.000006	#	#
master-bin.000007	#	#
master-bin.000008	#	#
master-bin.000009	#	#
master-bin.000010	#	#
# Wait persistent binlog finish. 
SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
Log_slice_name
binlog.000001.00000000000000000002.0000000607
binlog.000001.00000000000000000003.0000000655
binlog.000002.00000000000000000003.0000000333
binlog.000002.00000000000000000003.0000004270
binlog.000003.00000000000000000003.0000000643
binlog.000004.00000000000000000003.0000000299
binlog.000005.00000000000000000003.0000000299
binlog.000006.00000000000000000003.0000007566
binlog.000007.00000000000000000003.0000000251
binlog.000007.00000000000000000004.0000000299
binlog.000008.00000000000000000004.0000000251
binlog.000009.00000000000000000004.0000000333
DROP TABLE t1;
DROP DATABASE db1;
