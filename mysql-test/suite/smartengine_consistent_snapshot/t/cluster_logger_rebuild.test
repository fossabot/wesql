#
# Test for consistent snapshot recovery from object store
#
--source include/have_consensus_replication.inc
--source include/paxos.inc
--source include/have_wesql_test.inc

--connect (conn1,127.0.0.1,root,,test,$MYPORT_1)
--connect (conn2,127.0.0.1,root,,test,$MYPORT_2)
--connect (conn3,127.0.0.1,root,,test,$MYPORT_3)

--echo # Connection mysqld.1 data leader
--connection conn1
--enable_reconnect

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--echo # Wait for first snapshots to be generated after startup 
let $wait_condition= SELECT count(*) >= 1 FROM INFORMATION_SCHEMA.CONSISTENT_SNAPSHOT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

use test;
CREATE TABLE t1(c1 int) ENGINE=SMARTENGINE ;
INSERT INTO t1 values(1);
INSERT INTO t1 values(2);
INSERT INTO t1 values(3);
INSERT INTO t1 values(4);
SELECT * FROM t1;
FLUSH logs;

INSERT INTO t1 values(5);
INSERT INTO t1 values(6);
INSERT INTO t1 values(7);
INSERT INTO t1 values(8);
SELECT * FROM t1;

--echo # Wait for all binlog persistent
let $wait_condition= SELECT count(*) = 1 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_TASK_INFO, INFORMATION_SCHEMA.WESQL_CLUSTER_LOCAL where LAST_RAFT_INDEX = COMMIT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

--let $expected_logger1_start_log_index= query_get_value(SELECT PREVIOUS_RAFT_INDEX FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_SLICE_INDEX order by LOG_SLICE_NAME desc, PREVIOUS_RAFT_INDEX, 1)

--echo # Connection mysqld.2 logger1
--connection conn2
--enable_reconnect

--let $LOGGER1_CLUSTER_INFO=`select cluster_info from mysql.consensus_info`
--let $CLUSTER_ID=`select cluster_id from mysql.consensus_info`
--let $LOGGER1_DATADIR=`select @@datadir`
--let $region = `select @@objectstore_region`

--echo # Kill logger1
--source include/kill_mysqld.inc
--source include/wait_until_disconnected.inc

--echo # Force remove logger1 datadir
--echo # Force rmdir logger1 datadir for recovery test
--force-rmdir $LOGGER1_DATADIR

--let MYSQLD_LOG=$MYSQL_TMP_DIR/server.log
--let BOOTSTRAP_SQL=$MYSQL_TMP_DIR/bootstrap.sql
write_file $BOOTSTRAP_SQL;
  CREATE DATABASE test;
EOF
--echo # Initialize logger1
--exec $MYSQLD --no-defaults --initialize-insecure --datadir=$LOGGER1_DATADIR --table-on-objectstore=false --objectstore-region=$region --consensus-replication-log-type-node=on --consensus-replication-cluster-id=$CLUSTER_ID --consensus-replication-cluster-info='$LOGGER1_CLUSTER_INFO' --log_error_verbosity=3 --init-file=$BOOTSTRAP_SQL > $MYSQLD_LOG 2>&1

--echo # Start logger1
--let $wait_follower= 1
--source include/start_mysqld.inc
--let $wait_follower= 0

--let $assert_text= logger start index match
--let $assert_cond= "[SHOW CONSENSUS LOGS, Start_log_index, 1]" = $expected_logger1_start_log_index + 1
--source include/assert.inc

--echo # Connection mysqld.1 data leader
--connection conn1
--enable_reconnect

use test;
SELECT * FROM t1;
--echo # Cleanup
DROP TABLE t1;
--remove_file $BOOTSTRAP_SQL
--remove_file $MYSQLD_LOG
