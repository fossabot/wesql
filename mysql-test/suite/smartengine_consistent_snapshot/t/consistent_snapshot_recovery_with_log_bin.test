#
# Test for binlog archive to object store.
#
--echo # Consistent snapshot, change log-bin and consistent snapshot recovey.

--let $MYSQLD_DATADIR=`select @@datadir`
--let $region = `select @@objectstore_region`

--echo # Wait for first snapshots to be generated after startup 
let $wait_condition= SELECT count(*) >= 1 FROM INFORMATION_SCHEMA.SNAPSHOT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

use test;
CREATE TABLE t1(c1 int, c2 char(200)) ENGINE=SMARTENGINE ;
INSERT INTO t1 values(1,'abcd');

SELECT COUNT(*) FROM t1;

--echo # Wait for all binlog persistent
let $wait_condition= SELECT count(*) = 1 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_TASK_INFO, INFORMATION_SCHEMA.WESQL_CLUSTER_LOCAL where LAST_RAFT_INDEX = COMMIT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

--echo # Crash
set debug = 'd, crash_commit_before_log';
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
INSERT INTO t1 values(1,'abcd');
--source include/wait_until_disconnected.inc

--echo # Force rmdir datadir for recovery test
--force-rmdir $MYSQLD_DATADIR
--echo # Create an empty data directory...
--mkdir $MYSQLD_DATADIR

# Recovery start using consistent snapshot with raft_index = 0
--echo # 1. Recovery start using consistent snapshot with raft_index = 0
--let $_expect_file_name = $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--let $restart_parameters = "restart: "
--source include/start_mysqld.inc

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--echo # Wait for at least 2 snapshots to be generated after startup recovery.
let $wait_condition= SELECT count(*) >= 2 FROM INFORMATION_SCHEMA.SNAPSHOT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT COUNT(*) FROM t1;

INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;
INSERT INTO t1 values(5,'abcd');
INSERT INTO t1 values(6,'abcd');
INSERT INTO t1 values(7,'abcd');
INSERT INTO t1 values(8,'abcd');
FLUSH logs;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;

SELECT count(*) FROM t1;

--echo # Wait for all binlog persistent
let $wait_condition= SELECT count(*) = 1 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_TASK_INFO, INFORMATION_SCHEMA.WESQL_CLUSTER_LOCAL where LAST_RAFT_INDEX = COMMIT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

--echo # Crash
set debug = 'd, crash_commit_before_log';
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
INSERT INTO t1 values(100,'abcd');
--source include/wait_until_disconnected.inc

--echo # Force rmdir datadir for recovery test
--force-rmdir $MYSQLD_DATADIR
--echo # Create an empty data directory...
--mkdir $MYSQLD_DATADIR

# Recovery test using consistent snapshot
--echo # 2. Recovery start using consistent snapshot
--let $_expect_file_name = $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--let $restart_parameters = "restart: "
--source include/start_mysqld.inc

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--echo # Wait for at least 3 snapshots to be generated after startup recovery
let $wait_condition= SELECT count(*) >= 3 FROM INFORMATION_SCHEMA.SNAPSHOT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT count(*) FROM t1;

FLUSH Logs;
INSERT INTO t1 values(8,'abcd');
INSERT INTO t1 values(9,'abcd');
INSERT INTO t1 values(10,'abcd');
INSERT INTO t1 SELECT * FROM t1;

SELECT count(*) FROM t1;

--echo # Wait for all binlog persistent
let $wait_condition= SELECT count(*) = 1 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_TASK_INFO, INFORMATION_SCHEMA.WESQL_CLUSTER_LOCAL where LAST_RAFT_INDEX = COMMIT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

--echo # Crash
set debug = 'd, crash_commit_before_log';
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
INSERT INTO t1 values(100,'abcd');
--source include/wait_until_disconnected.inc

--echo # Force rmdir datadir for recovery test
--force-rmdir $MYSQLD_DATADIR
--echo # Create an empty data directory...
--mkdir $MYSQLD_DATADIR

# Recovery start using consistent snapshot
--echo # 3. Recovery start using consistent snapshot
--let $_expect_file_name = $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--let $restart_parameters=restart
--source include/start_mysqld.inc

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--echo # Wait for at least 4 snapshots to be generated after startup recovery 
let $wait_condition= SELECT count(*) >= 4 FROM INFORMATION_SCHEMA.SNAPSHOT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT count(*) FROM t1;

DROP TABLE t1;
