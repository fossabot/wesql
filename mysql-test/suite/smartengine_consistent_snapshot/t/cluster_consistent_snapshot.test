#
# Test for consistent snapshot recovery from object store
#
--source include/have_consensus_replication.inc
--source include/consensus_replication.inc

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--echo # Wait for first snapshots to be generated after startup 
let $wait_condition= SELECT count(*) >= 1 FROM INFORMATION_SCHEMA.SNAPSHOT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

use test;
CREATE TABLE t1(c1 int) ENGINE=SMARTENGINE ;
INSERT INTO t1 values(1);
INSERT INTO t1 values(2);
INSERT INTO t1 values(3);
INSERT INTO t1 values(4);
SELECT * FROM t1;
SHOW CREATE TABLE t1;

INSERT INTO t1 values(5);
INSERT INTO t1 values(6);
INSERT INTO t1 values(7);
INSERT INTO t1 values(8);
SELECT * FROM t1;

--let $MYSQLD_DATADIR=`select @@datadir`
--let $region = `select @@objectstore_region`

set debug = 'd, crash_commit_before_log';
--let $_expect_file_name= $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
INSERT INTO t1 values(9);

--source include/wait_until_disconnected.inc

--echo # Force rmdir datadir for recovery test
--force-rmdir $MYSQLD_DATADIR
--echo # Create an empty data directory...
--mkdir $MYSQLD_DATADIR

sleep 5;

# recovery from raft index=0
--echo # Recovery start from object store.
--source include/start_mysqld.inc
--source include/wait_until_connected_again.inc

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

use test;
SELECT * FROM t1;
--echo # Cleanup
DROP TABLE t1;
