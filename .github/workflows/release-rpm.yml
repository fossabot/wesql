name: RELEASE-RPM

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'prerelease'
        required: true
        default: '1'
      date:
        description: 'date'
        required: true
        default: '1'
      snapshot:
        description: 'snapshot'
        required: true
        default: '1'
      without_test:
        description: 'without test'
        required: false
        default: '1'
      without_debug:
        description: 'without debug'
        required: false
        default: '1'
      parallel_build_jobs:
        description: 'parallel build jobs'
        required: false
        default: '4'

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  KNOWN_HOSTS: ${{ secrets.GCP_RPM_REPO_KNOWN_HOSTS }}
  SSH_HOST: ${{ secrets.GCP_RPM_REPO_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
  DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER}}
  DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD}}
  DOCKER_REGISTRY_URL: "docker.io"
  DOCKER_IMG: "apecloud/mysql_base"
  IMG_VERSION: "0.3-SNAPSHOT"
  SERVER_NAME: "wesql_rpm_build"
  BUILD_PATH: "/home/mysql/code/mysql-server"
  BOOST_NAME: "boost_1_77_0.tar.bz2"


jobs:
  enable-runner:
    uses: ./.github/workflows/enable-gke-runner.yml
    with:
      GITHUB_REPO: "wesql/wesql-server"
    secrets: inherit

  release-rpm:
    name: release x86_64 rpm
    needs: [ enable-runner ]
    runs-on: [self-hosted, gke-oracle8-amd-runner ]
    steps:
      - uses: actions/checkout@v3
      - name: rpm build
        run: |
          sudo cp /home/mysql/${{ env.BOOST_NAME }} ${{ github.workspace }}/..

          sudo git config --global --add safe.directory ${{ github.workspace }}

          sudo rm -rf ${{ github.workspace }}/../rpm/*

          cd packaging/build-wesql

          sudo ./rpm_build.sh --builddir=${{ github.workspace }}/.. \
            --source_code=wesql-server \
            --build_rpm=1 --prerelease=${{ github.event.inputs.prerelease }} \
            --date=${{ github.event.inputs.date }} \
            --snapshot=${{ github.event.inputs.snapshot }} \
            --without_test=${{ github.event.inputs.without_test }} \
            --without_debug=${{ github.event.inputs.without_debug }} \
            --parallel_build_jobs=${{ github.event.inputs.parallel_build_jobs }}

      - name: upload rpm
        run: |
          mkdir -pv /home/mysql/.ssh/

          touch /home/mysql/.ssh/known_hosts

          echo "${{ env.KNOWN_HOSTS }}" >> /home/mysql/.ssh/known_hosts

          sshpass -p ${{ env.SSH_PASSWORD }} scp ${{ github.workspace }}/../rpm/* \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:/var/www/html/release/8/rpms/x86_64/

          sshpass -p ${{ env.SSH_PASSWORD }} ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} \
            createrepo --update /var/www/html/release/8/rpms/x86_64/


  release-arm-rpm:
    name: release aarch64 rpm
    needs: [ enable-runner ]
    runs-on: [ self-hosted, gke-arm-runner ]
    steps:
      - uses: actions/checkout@v3
      - name: rpm build
        run: |
          cp /home/mysql/${{ env.BOOST_NAME }} ${{ github.workspace }}/extra

          sudo git config --global --add safe.directory ${{ github.workspace }}

          sudo docker login --username ${{ env.DOCKER_REGISTRY_USER }} \
            --password ${{ env.DOCKER_REGISTRY_PASSWORD }} \
            ${{ env.DOCKER_REGISTRY_URL }}

          sudo docker pull ${{ env.DOCKER_IMG }}:${{ env.IMG_VERSION }}

          DOCKER_CONTAINER_ID=`sudo docker ps -a|grep ${{ env.SERVER_NAME }}|awk '{print $1}'`

          if [[ -n $DOCKER_CONTAINER_ID ]]; then
            sudo docker stop  $DOCKER_CONTAINER_ID
            sudo docker rm $DOCKER_CONTAINER_ID
          fi

          sudo docker run -itd -v ${{ github.workspace }}:${{ env.BUILD_PATH }} \
            --name ${{ env.SERVER_NAME }} \
            ${{ env.DOCKER_IMG }}:${{ env.IMG_VERSION }}

          sudo docker exec ${{ env.SERVER_NAME }} sh -c \
            "sudo cp ${{ env.BUILD_PATH }}/extra/${{ env.BOOST_NAME }} ${{ env.BUILD_PATH }}/..; \
            cd ${{ env.BUILD_PATH }}/packaging/build-wesql; \
            sudo ./rpm_build.sh \
            --build_rpm=1 \
            --prerelease=${{ github.event.inputs.prerelease }} \
            --date=${{ github.event.inputs.date }} \
            --snapshot=${{ github.event.inputs.snapshot }} \
            --without_test=${{ github.event.inputs.without_test }} \
            --without_debug=${{ github.event.inputs.without_debug }} \
            --parallel_build_jobs=${{ github.event.inputs.parallel_build_jobs }};
            sudo cp -r ${{ env.BUILD_PATH }}/../rpm ${{ env.BUILD_PATH }}"

      - name: upload rpm
        run: |
          mkdir -pv /home/mysql/.ssh/

          touch /home/mysql/.ssh/known_hosts

          echo "${{ env.KNOWN_HOSTS }}" >> /home/mysql/.ssh/known_hosts

          sshpass -p ${{ env.SSH_PASSWORD }} scp ${{ github.workspace }}/rpm/* \
            ${{ env.SSH_USER }}@${{ env.SSH_HOST }}:/var/www/html/release/8/rpms/aarch64/

          sshpass -p ${{ env.SSH_PASSWORD }} ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} \
            createrepo --update /var/www/html/release/8/rpms/aarch64/

      - name: rm rpm
        if: ${{ always() }}
        run: |
          sudo rm -rf ${{ github.workspace }}/rpm

  disable-gke-runner:
    needs: [ release-rpm, release-arm-rpm  ]
    if: ${{ always() }}
    uses: ./.github/workflows/enable-gke-runner.yml
    with:
      GITHUB_REPO: "wesql/wesql-server"
      ENABLE: "disable"
    secrets: inherit
