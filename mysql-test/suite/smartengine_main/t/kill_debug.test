--source include/have_debug.inc

SET @old_debug= @@session.debug;

--echo Bug#13820776 CRASH IN HANDLER::HA_STATISTIC_INCREMENT IF QUERY IS KILLED

#use smartengine_parallel_read_threads=1

select @@global.smartengine_parallel_read_threads into @parallel_scan_saved;
set global smartengine_parallel_read_threads=1;
set smartengine_parallel_read_threads=1;

CREATE TABLE g9(a INT) ENGINE=SMARTENGINE;

let $query=SELECT 1 FROM g9
RIGHT JOIN (SELECT 1 FROM g9) AS d1 ON 1 LEFT JOIN
(SELECT 1 FROM g9) AS d2 ON 1;

eval $query;

SET debug= '+d,bug13820776_1';
--error ER_QUERY_INTERRUPTED
eval $query;
SET debug= '-d,bug13820776_1';

SET debug= '+d,bug13820776_2';
--error ER_QUERY_INTERRUPTED
eval $query;
SET debug= '-d,bug13820776_2';

DROP TABLE g9;
SET debug= @old_debug;

--echo Bug#13822652 TESTCASES: PROTOCOL.CC:518: VOID PROTOCOL::END_STATEMENT(): ASSERTION `0' FAILED

CREATE TABLE g1(a INT PRIMARY KEY, b INT) ENGINE=SMARTENGINE;
INSERT INTO g1 VALUES (1,2),(2,3),(4,5);
CREATE TABLE g2(a INT PRIMARY KEY, b INT) ENGINE=SMARTENGINE;
INSERT INTO g2 VALUES (1,2),(2,3),(4,5);

let $query=UPDATE IGNORE g1,g2 SET g1.b=0 WHERE g1.a=g2.a;
eval $query;

SET debug= '+d,bug13820776_2';

--error ER_QUERY_INTERRUPTED
eval $query;
SET debug= '-d,bug13820776_2';

SET debug= '+d,bug13822652_1';
--error ER_QUERY_INTERRUPTED
eval $query;
SET debug= '-d,bug13822652_1';

let $query=INSERT IGNORE INTO g1(a) SELECT b FROM g1 WHERE a<=0 LIMIT 5;
eval $query;

SET debug= '+d,bug13822652_2';
--error ER_QUERY_INTERRUPTED
eval $query;
SET debug= '-d,bug13822652_2';

DROP TABLE g1,g2;

--echo #
--echo # Bug#28079850: Requires handling THD::KILL_QUERY in records* functions.
--echo #

CREATE TABLE tmp(c1 INT NOT NULL PRIMARY KEY,
                      c2 INT NOT NULL,
                      c3 char(20),
                      KEY c3_idx(c3))ENGINE=SMARTENGINE;

INSERT INTO tmp VALUES (1, 1, 'a'), (2,2,'a'), (3,3,'a');
ANALYZE TABLE tmp;

SET debug= '+d,bug28079850';
#checks handler::records_from_index()
--error ER_QUERY_INTERRUPTED
SELECT COUNT(*) FROM tmp;
#checks handler::records()
--error ER_QUERY_INTERRUPTED
SELECT COUNT(*) FROM performance_schema.table_handles;
SET debug= '-d,bug28079850';

DROP TABLE tmp;

SET debug= @old_debug;

set smartengine_parallel_read_threads=@parallel_scan_saved;
set global smartengine_parallel_read_threads=@parallel_scan_saved;

--source suite/smartengine/include/check_smartengine_log_error.inc
