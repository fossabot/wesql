#
# Test for binlog archive to object store.
#
--echo # Change leader role to logger, The Logger node continues to persist the binlog .

--source include/have_wesql_test.inc
--connect (conn1,127.0.0.1,root,,test,$MYPORT_1)
--connect (conn2,127.0.0.1,root,,test,$MYPORT_2)
--connect (conn3,127.0.0.1,root,,test,$MYPORT_3)

--echo # Connection mysqld.1
--connection conn1
--enable_reconnect
FLUSH logs;
FLUSH logs;
FLUSH logs;
--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish on mysqld.1 as leader after flush 3 logs.
let $wait_condition= SELECT count(distinct Log_name) >= 1 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT distinct Log_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

use test;
CREATE TABLE t1(c1 int, c2 char(200)) ENGINE=SMARTENGINE;
INSERT INTO t1 values(1,'abcd');
INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;
INSERT INTO t1 values(5,'abcd');
FLUSH logs;
FLUSH logs;
FLUSH logs;
INSERT INTO t1 values(6,'abcd');
INSERT INTO t1 values(7,'abcd');
INSERT INTO t1 values(8,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;

INSERT INTO t1 values(1,'abcd');
INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');
INSERT INTO t1 values(1,'abcd');
INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');

SELECT count(*) FROM t1;

--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish on mysqld.1 as leader after multi insert.
let $wait_condition= SELECT count(distinct Log_name) >= 8 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT distinct Log_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

--echo # Kill mysqld.1
--source include/kill_mysqld.inc

--echo # Connection mysqld.2 as new leader.
--connection conn2
--enable_reconnect
#change consensus_node to consensus_force_single_mode;
call dbms_consensus.force_promote();
let $wait_condition= select role='Prepared' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--let $assert_text= consensus role of mysqld.2 is Leader.
--let $assert_cond= role = \'Prepared\' from information_schema.wesql_cluster_local
--source include/assert.inc

--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish on mysqld2 as new leader.
let $wait_condition= SELECT count(distinct Log_name) >= 8 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT distinct Log_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

FLUSH logs;
FLUSH logs;
FLUSH logs;
--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish on mysqld.2 as new leader after flush 3 logs.
let $wait_condition= SELECT count(distinct Log_name) >= 10 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT distinct Log_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

--echo # Connection mysqld.3 as follower.
--connection conn3
--enable_reconnect

--let $assert_text= consensus role of mysqld.3 is Follower.
--let $assert_cond= role = \'Follower\' from information_schema.wesql_cluster_local
--source include/assert.inc

--connection conn1
--enable_reconnect
--echo # Restart mysqld.1
--source include/start_mysqld.inc

--echo # Connection mysqld.1 as new leader.
let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--let $assert_text= consensus role of mysqld.1 is Leader.
--let $assert_cond= role = \'Leader\' from information_schema.wesql_cluster_local
--source include/assert.inc

--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish on mysqld.1 as new leader.
let $wait_condition= SELECT count(distinct Log_name) >= 10 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc
SELECT distinct Log_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

FLUSH logs;
INSERT INTO t1 SELECT * FROM t1 limit 5;
INSERT INTO t1 SELECT * FROM t1 limit 5;
INSERT INTO t1 SELECT * FROM t1 limit 5;
FLUSH logs;

--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish on mysqld.1 as new after flush 1 logs.
let $wait_condition= SELECT count(distinct Log_name) >= 10 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc
SELECT distinct Log_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

DROP table t1;
