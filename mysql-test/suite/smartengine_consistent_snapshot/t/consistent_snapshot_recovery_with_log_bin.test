#
# Test for binlog archive to object store.
#
--echo # Consistent snapshot, change log-bin and consistent snapshot recovey.

--let $MYSQLD_DATADIR=`select @@datadir`
--let $region = `select @@objstore_region`

# Recovery test using consistent snapshot with no binlog

--echo # Wait for first snapshots to be generated after startup 
let $wait_condition= SELECT count(*) = 1 FROM INFORMATION_SCHEMA.CONSISTENT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

FLUSH logs;
--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish. 
let $wait_condition= SELECT count(*) = 1 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

--echo # Crash
set debug = 'd, crash_commit_before_log';
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--error 2013
create table t1(id int);
--source include/wait_until_disconnected.inc

--echo # Force rmdir datadir for recovery test
--let $BACKUP_DATADIR = $MYSQL_TMP_DIR/$region
--force-cpdir $MYSQLD_DATADIR/$region $BACKUP_DATADIR
--force-rmdir $MYSQLD_DATADIR
--echo # Create an empty data directory...
--mkdir $MYSQLD_DATADIR
--force-cpdir $BACKUP_DATADIR $MYSQLD_DATADIR/$region
--force-rmdir $BACKUP_DATADIR

# Recovery start using consistent snapshot with no binlog
--echo # Recovery start using consistent snapshot with no binlog
--let $_expect_file_name = $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--let $restart_parameters = "restart: "
--source include/start_mysqld.inc

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--echo # Wait for first snapshots to be generated after startup recovery.
let $wait_condition= SELECT count(*) = 2 FROM INFORMATION_SCHEMA.CONSISTENT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

--let $assert_text= the first consistent snapshot binlog is empty.
--let $assert_cond= COUNT(*) = 1 FROM INFORMATION_SCHEMA.CONSISTENT_PERSISTENT_SNAPSHOT_INDEX WHERE consensus_index = 0
--source include/assert.inc

--source include/show_binary_logs.inc
--echo # Wait persistent binlog finish. 
let $wait_condition= SELECT count(*) >= 2 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

CREATE DATABASE db1;
CREATE TABLE t1(c1 int, c2 char(200)) ENGINE=SMARTENGINE ;
INSERT INTO t1 values(1,'abcd');
INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;
INSERT INTO t1 values(5,'abcd');
FLUSH logs;
FLUSH logs;
FLUSH logs;
INSERT INTO t1 values(6,'abcd');
INSERT INTO t1 values(7,'abcd');
INSERT INTO t1 values(8,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;

SELECT count(*) FROM t1;

--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish. 
let $wait_condition= SELECT count(*) >= 6 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

# shutdown server and rmdir datadir
--echo # Shutdown server
--source include/shutdown_mysqld.inc

--echo # Force rmdir datadir for recovery test
--let $BACKUP_DATADIR = $MYSQL_TMP_DIR/$region
--force-cpdir $MYSQLD_DATADIR/$region $BACKUP_DATADIR
--force-rmdir $MYSQLD_DATADIR
--echo # Create an empty data directory...
--mkdir $MYSQLD_DATADIR
--force-cpdir $BACKUP_DATADIR $MYSQLD_DATADIR/$region
--force-rmdir $BACKUP_DATADIR

# Recovery test using consistent snapshot, and change --log-bin
--echo # Recovery start using consistent snapshot, and change --log-bin
--let $restart_parameters=restart: --log-bin=$MYSQL_TMP_DIR/custom-binlog --log-bin-index=$MYSQL_TMP_DIR/custom-binlog-index.index
--replace_result $restart_parameters restart
--source include/start_mysqld.inc

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--echo # Wait for snapshots to be generated after startup recovery
let $wait_condition= SELECT count(*) = 4 FROM INFORMATION_SCHEMA.CONSISTENT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT count(*) FROM t1;

--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish. 
let $wait_condition= SELECT count(*) >= 9 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

# shutdown server and rmdir datadir
--echo # Shutdown server
--source include/shutdown_mysqld.inc

--echo # Force rmdir datadir for recovery test
--let $BACKUP_DATADIR = $MYSQL_TMP_DIR/$region
--force-cpdir $MYSQLD_DATADIR/$region $BACKUP_DATADIR
--force-rmdir $MYSQLD_DATADIR
--echo # Create an empty data directory...
--mkdir $MYSQLD_DATADIR
--force-cpdir $BACKUP_DATADIR $MYSQLD_DATADIR/$region
--force-rmdir $BACKUP_DATADIR
--remove_file $MYSQL_TMP_DIR/custom-binlog-index.index
--remove_file $MYSQL_TMP_DIR/custom-binlog.000006
--remove_file $MYSQL_TMP_DIR/custom-binlog.000007
--remove_file $MYSQL_TMP_DIR/custom-binlog.000008

# Recovery start using consistent snapshot, change back to log-bin=master-bin
--echo # Recovery start using consistent snapshot
--let $restart_parameters=restart
--source include/start_mysqld.inc

let $wait_condition= select role='Leader' from information_schema.wesql_cluster_local;
let $wait_timeout= 600;
--source include/wait_condition.inc

--echo # Wait for snapshots to be generated after startup recovery 
let $wait_condition= SELECT count(*) = 5 FROM INFORMATION_SCHEMA.CONSISTENT_PERSISTENT_SNAPSHOT_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT count(*) FROM t1;

--source include/show_binary_logs.inc

--echo # Wait persistent binlog finish. 
let $wait_condition= SELECT count(*) >= 10 FROM INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;
let $wait_timeout= 600;
--source include/wait_condition_or_abort.inc

SELECT Log_slice_name from INFORMATION_SCHEMA.BINLOG_PERSISTENT_FILE_INDEX;

DROP TABLE t1;
DROP DATABASE db1;
