# Change leader role to logger, The Logger node continues to persist the binlog .
# Connection mysqld.1
include/assert.inc [raft role of mysqld.1 is Leader.]
FLUSH logs;
FLUSH logs;
FLUSH logs;
# Wait persistent binlog finish on mysqld.1 as leader after flush 3 logs.
use test;
CREATE TABLE t1(c1 int, c2 char(200)) ENGINE=SMARTENGINE;
INSERT INTO t1 values(1,'abcd');
INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;
INSERT INTO t1 values(5,'abcd');
FLUSH logs;
FLUSH logs;
FLUSH logs;
INSERT INTO t1 values(6,'abcd');
INSERT INTO t1 values(7,'abcd');
INSERT INTO t1 values(8,'abcd');
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
INSERT INTO t1 SELECT * FROM t1;
FLUSH logs;
# Wait persistent binlog finish on mysqld.1 as leader after flush 5 logs.
# force suspend binlog persistent
set global debug= '+d, force_suspend_binlog_persist_while_wait_for_mysql_binlog';
INSERT INTO t1 values(1,'abcd');
INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');
INSERT INTO t1 values(1,'abcd');
INSERT INTO t1 values(2,'abcd');
INSERT INTO t1 values(3,'abcd');
INSERT INTO t1 values(4,'abcd');
SELECT count(*) FROM t1;
count(*)
552
# Kill mysqld.1
# Kill the server
# Connection mysqld.2 as new leader.
call dbms_consensus.force_promote();
include/assert.inc [raft role of mysqld.2 is Leader.]
# Wait persistent binlog finish on mysqld2 as new leader.
FLUSH logs;
FLUSH logs;
FLUSH logs;
# Wait persistent binlog finish on mysqld.2 as new leader after flush 3 logs.
# Connection mysqld.3 as follower.
include/assert.inc [raft role of mysqld.3 is Follower.]
# Restart mysqld.1
# restart
# Connection mysqld.1 as new leader.
include/assert.inc [raft role of mysqld.1 is Leader.]
# Wait persistent binlog finish on mysqld.1 as new leader.
FLUSH logs;
INSERT INTO t1 SELECT * FROM t1 limit 5;
INSERT INTO t1 SELECT * FROM t1 limit 5;
INSERT INTO t1 SELECT * FROM t1 limit 5;
FLUSH logs;
# Wait persistent binlog finish on mysqld.1 as new leader after flush 2 logs.
DROP table t1;
